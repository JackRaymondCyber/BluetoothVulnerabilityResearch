#!/usr/bin/env python3
import subprocess
import sys


version = subprocess.check_output(["uname", "-r"], universal_newlines=True).strip()

def isVulnerable():
    a = version.split(".")
    first = int(a[0])
    second = int(a[1])
    vul = False

    if first == 4:
        if second >= 8:
            vul = True
    elif first == 5:
        if second <= 9:
            vul = True
    else:
        vul = False    
    return vul

def update():
    print("Your kernel version, " + version + ", is vulnerable to Bleedingtooth.")
    update = input("Would you like to update your kernel to the latest stable version? (Y/N): ")  
    while update not in ["N", "n"]:
        if update == "Y" or update == "y":
            subprocess.run(["sudo", "apt", "update"])
            latestKernelPkg= subprocess.check_output("apt-cache search --names-only linux-image generic | grep Signed | sort -V | cut -d ' ' -f 1 | tail -1", shell=True,universal_newlines=True).strip()
            checkInstalled = subprocess.check_output("if apt-cache policy " + latestKernelPkg + " | grep none > /tmp/a; then echo none; else echo exsists; fi", shell=True,universal_newlines=True).strip() 
            if checkInstalled == "exsists":
                print("\nThe latest stable kernel package (" + latestKernelPkg + ") is already installed, but you are using an outdated kernel version.")
                reboot() 
                break
            else:
                subprocess.run(["sudo", "apt", "install", latestKernelPkg])
                reboot()
                break
        else:
            update = input("Please answer Y or N: ")

def reboot():
    reboot = input("You must restart your machine to use the latest kernel version. Reboot? (Y/N): ")
    while(True):
        if reboot == "Y" or reboot == "y":
            subprocess.run(["reboot"])
        elif reboot == "N" or reboot == "n":
            break
        else:
            reboot = input("Please answer Y or N: ")

if __name__ == "__main__":
    if isVulnerable() == True: 
        update()
    else:
        print("Version " + version + " is not susceptible to Bleedingtooth.")